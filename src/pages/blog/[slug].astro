---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import Layout from "@/layouts/Layout.astro";
import Prose from "@/components/Blog/Prose.astro";
import { formatDate } from "@/utils";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  const paths = blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
  return paths;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout
  viewTransitions
  seo={{
    title: entry.data.title,
    description: entry.data.description,
    openGraph: {
      basic: {
        title: entry.data.title,
        type: "article",
        image: entry.data.cover?.src || "",
      },
    },
  }}
>
  <article>
    <div
      class="flex flex-col justify-center text-center mx-auto space-y-4 my-10 max-w-2xl"
    >
      <h1 class="text-4xl font-semibold">{entry.data.title}</h1>
      <p class="text-md">{formatDate(entry.data.publishedAt)}</p>
      {
        entry.data.cover?.src && (
          <Image
            src={entry.data.cover.src}
            alt="Article thumbnail"
            width={600}
            height={400}
            class="rounded-xl shadow-xl mx-auto"
          />
        )
      }
    </div>
    <Prose>
      <Content />
    </Prose>
  </article>
</Layout>

{/*<style is:global>
  code {
    counter-reset: step;
    counter-increment: step 0;
  }

  code .line::before {
    content: counter(step);
    counter-increment: step;
    width: 1rem;
    margin-right: 1rem;
    display: inline-block;
    text-align: right;
    color: rgba(229, 235, 238, 0.5);
  }
</style>*/}
